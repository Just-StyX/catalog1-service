plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.jslpolarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0") // for server config
	set('testContainersVersion', '1.19.7') // for test containers
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootRun {
	systemProperty 'spring.profiles.active', 'testData'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-config' // for server config
	implementation 'org.springframework.retry:spring-retry' // for config
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.flywaydb:flyway-core'

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.testcontainers:postgresql' // for test containers

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" // for server config
		mavenBom "org.testcontainers:testcontainers-bom:${testContainersVersion}" // for test containers
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
